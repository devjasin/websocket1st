<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <title>Document</title>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <div class="max-w-md mx-auto bg-white shadow-lg rounded-lg overflow-hidden mt-16">
    <div class="px-4 py-2">
        <h1 class="text-gray-800 font-bold text-2xl uppercase">To-Do List</h1>
    </div>
    <form class="w-full max-w-sm mx-auto px-4 py-2" onsubmit="addTodo(); return false;">
        <div class="flex items-center border-b-2 border-teal-500 py-2">
            <input
            id="newTask"
                class="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none"
                type="text" placeholder="Add a task">
            <button
                class="flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded"
                type="submit">
                Add
            </button>
        </div>
    </form>
    <ul id="todolist" class="divide-y divide-gray-200 px-4">
        
    </ul>
    <script>
    const socket = io();
    socket.emit("fetchTodos");
    socket.on("todos_updated", (data) => {
      if (data.status === "success") {
        updateTodoList(data.data);
      } else {
        console.log("error occurred");
      }
    });

    function updateTodoList(todos) {
      const todolist = document.getElementById("todolist");
      todolist.innerHTML = '';
      todos.forEach((todo) => {
        const listItem = document.createElement('li');
        listItem.className = "py-4";
        listItem.innerHTML = `
          <div class="flex items-center">
              <input id="todo_${todo._id}" name="todo_${todo._id}" type="checkbox"
                  class="h-4 w-4 text-teal-600 focus:ring-teal-500 border-gray-300 rounded">
              <label for="todo_${todo._id}" class="ml-3 block text-gray-900">
                  <span class="text-lg font-medium">${todo.task}</span>
                  <span class="text-sm font-light text-gray-500">${todo.deadLine}</span>
              </label>
          </div>
        `;
        todolist.appendChild(listItem);
      });
    }

    function addTodo() {
      const taskValue = document.getElementById("newTask");
      const task = taskValue.value.trim();
      if (task) {
        socket.emit("addTodo", {
          task: task,
          deadLine: new Date().toLocaleString(),
          status: "pending"
        });
        taskValue.value = "";
      } else {
        alert("Task cannot be empty!");
      }
    }
    </script>
</div>
</body>
</html>
